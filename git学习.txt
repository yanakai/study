总结：
A:使用git每次修改文件，首先保证把文件add到缓存区，通常把每次修改add到暂存区，而后统一 git commit到本地分支仓库或者远程仓库 
一、生成本地.ssh文件命令：ssh-keygen -t rsa -C  youremail@example.com 命令之后三次回车在c盘的用户目录生成.ssh文件目录
1.初始化仓库：git init
2.加入到缓存去：git add <文件名>
3.提交到仓库：git commit -m '提交说明'
4.查看提交日志：git log 
5.查看简化提交日志： git log --pretty=oneline
6.返回上一个版本： git reset  --hard HEAD^  注意：HEAD后面的 ^ 这个符号一个代表返回上一个版本两个是上上一个版本以此类推，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
7.指定回退版本号：git reset --hard <提交的版本序列号>
8.查看每次的git命令：git reflog   注意： 在每次记录的HEAD@前面的编码就是每次提交的版本号 可以使用第7步回到指定版本
9.查看文件状态：git status
10.git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
	一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
	一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态
11.git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令
12.删除文件  git rm <文件名>删除版本库,包含本地命令 rm <文件名> 同时删除工作区文件 ，并且git commit -m "删除说明"  其实删除也是一个修改操作 
	远程删除仓库文件 命令顺序 第一步：git rm <文件名> 删除版本库文件（同时包含删除工作区文件）, 第二步：git commit -m "删除说明"提交到版本库,第三步：git push origin master本地版本库提交到远程仓库
13.要关联一个远程库，使用命令git remote add origin git@github.com:<远程仓库账户名>/<远程仓库名称>.git；例如 ：git remote add origin git@github.com:yanakai/study.git
	关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
	此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
14.从远程库克隆 git clone git@github.com:<远程仓库账户名>/<远程仓库名称>.git
15.创建分支 git checkout -b <分支名称>  然后切换到分支库  
	git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：git branch <分支名称> （创建指定分支）和git checkout <分支名称>（切换到指定分支）
	git branch命令会列出所有分支，当前分支前面会标一个*号
	git branch -d <分支名称> 删除指定的分支
	git switch -c <分支名称> 创建指定分支并切换到此分支 同 git checkout -b <分支名称>
	git switch <分支名称>	切换到指定分支    同 git checkout <分支名称>
16.git merge命令用于合并指定分支到当前分支 例如：git merge dev 命令dev分支文件合并到当前分支
